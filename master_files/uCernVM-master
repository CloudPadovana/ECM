Content-Type: multipart/mixed; boundary="===============7832870659841679070=="
MIME-Version: 1.0

--===============7832870659841679070==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="uCernVM-master"

[amiconfig]
plugins= condor

[condor]
use_ips=true
highport=42000
condor_user=condor
lowport=41000
condor_secret=12345
condor_group=condor
uid_domain=*

--===============7832870659841679070==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="test_script.sh"

#!/bin/bash
##################
# ELASTIQ CONFIG #
##################
EC2_ACCESS_KEY=access-key
EC2_SECRET_KEY=secret-key
EC2_URL=ec2-url
MAX_VMS=max-vms
MIN_VMS=min-vms
FLAVOR=instance-flavor
IMAGE_ID=image-id
JOBS_PER_VM=jobs-per-vm
IDLE_TIME=idle-time
KEY_NAME=key-name
SLAVE_USERDATA=slave-userdata

###########
# CA CERT #
###########
cd /tmp
wget http://90.147.77.142/repo/CA/tls-ca-bundle.pem

yum localinstall -y http://90.147.77.142/repo/elastiq/rhel7/python-elastiq-0.9.10-1.py27.noarch.rpm
#
cat /tmp/tls-ca-bundle.pem >> /usr/lib/python2.7/site-packages/boto/cacerts/cacerts.txt
#

cat<< EOF >/etc/elastiq.conf 
[elastiq]
check_queue_every_s = 45
idle_for_time_s = $IDLE_TIME
waiting_jobs_time_s = 45
n_jobs_per_vm = $JOBS_PER_VM
batch_plugin = htcondor
estimated_vm_deploy_time_s = 1200
check_vms_every_s = 45

[ec2]
flavour = $FLAVOR
api_url = $EC2_URL
user_data_b64 = $SLAVE_USERDATA
image_id = $IMAGE_ID
aws_secret_access_key = $EC2_SECRET_KEY
aws_access_key_id = $EC2_ACCESS_KEY
key_name = $KEY_NAME

[quota]
max_vms = $MAX_VMS
min_vms = $MIN_VMS

EOF

sed -i "s|Activity,Machine|Machine,MyType,Activity,TargetType|g" /usr/lib/python2.7/site-packages/elastiq/plugins/htcondor.py
sed -i "s|'condor_q', '-attributes', 'JobStatus', '-long'|'condor_q', '-all', '-global', '-attributes', 'JobStatus', '-long'|g" /usr/lib/python2.7/site-packages/elastiq/plugins/htcondor.py
service elastiq stop
service elastiq start
###############
# TEST SCRIPT #
###############
useradd cernvm
mkdir /home/cernvm/jobs/
mkdir /home/cernvm/jobs/log/
mkdir /home/cernvm/jobs/output/
mkdir /home/cernvm/jobs/error/
cat<< EOF > /home/cernvm/jobs/test.jdl
Universe = vanilla
Executable = /home/cernvm/jobs/test.sh
Log = /home/cernvm/jobs/log/test.log.\$(Cluster)\$(Process)
Output = /home/cernvm/jobs/output/test.out.\$(Cluster)\$(Process)
Error = /home/cernvm/jobs/error/test.err.\$(Cluster)\$(Process)
Queue 10
EOF
#
cat <<EOF> /home/cernvm/jobs/test.sh
#!/bin/bash
HOST=\$(hostname -I | awk '{print $1}')
DIR=\$(pwd)
sleep 5
echo "I'm sleeping in \$HOST"
echo ":-("
echo "More precisely in this directory \$DIR" 
echo ":-/"
sleep 20
echo "Now I'm running! So fun! :-)"
EOF
#
chown cernvm:root -R /home/cernvm/jobs/
chmod u+x -R /home/cernvm/jobs/
#
cat<<EOF>/root/README.txt
Root user can't submit condor jobs.
You can submit jobs using cernvm user [su - cernvm ] and you can test condor using the test.jdl file [ condor_submit jobs/test.jdl ].
Good fun! :)
EOF

--===============7832870659841679070==--
